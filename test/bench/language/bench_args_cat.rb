require 'benchmark'

(ARGV[0] || 10).to_i.times {
  Benchmark.bm(20) {|bm|
    bm.report("control, x = 1, 2") {
      100000.times {
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
        x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2; x = 1, 2
      }
    }
    bm.report("100k * 100 x = 1, *2") {
      100000.times {
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
        x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2; x = 1, *2
      }
    }
  }
}
<?xml version="1.0" encoding="UTF-8"?>
<!-- Thanks to Benoit Cerrina <b.cerrina@wanadoo.fr> for this buildfile. -->
<project basedir="." default="all" name="JRuby">
	<property name="build.dir" value="build"/>
    <property name="lib.dir" value="lib"/>
    <property name="jar.file" value="${build.dir}/jruby.jar"/>
    
	<!--<property name="build.compiler" value="jikes"/>-->
	<property name="build.compiler" value="modern"/>
    <!--<property name="build.compiler" value="classic"/>-->

    <property name="build.compiler.fulldepend" value="on"/>
    <!--<property name="build.compiler.emacs" value="on"/>-->

    <property name="version" value="0.3.0"/>
    <property name="version.file" value="0_3_0"/>
    <property name="javadoc.title" value="JRuby"/>

    <property name="build.dest" value="${build.dir}/classes"/>
    <property name="build.docs" value="${build.dir}/docs"/>
    <property name="build.tars.base" value="${build.dir}/tars"/>
    <property name="build.tars" value="${build.tars.base}/jruby-${version.file}"/>
    <property name="src.dir" value="."/>
    <property name="base.dir" value="."/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

    <target name="check_for_optional_packages">
        <available property="jdk1.4+" classname="java.lang.CharSequence" />
        <available property="bsf.present"
                   classname="com.ibm.bsf.BSFManager"
                   classpathref="classpath" />
        <available property="junit.present"
                   classname="junit.framework.TestCase"
                   classpathref="classpath" />
		<available property="db4o.present"
                   classname="com.db4o.Db4o"
                   classpathref="classpath" />
    </target>

    <target name="test" depends="compile">
		<junit printsummary="yes">
            <formatter type="plain"/>
            <test name="org.jruby.test.MainTestSuite"/>
            <classpath>
                <pathelement path="${classpath}" />
                <pathelement location="${jar.file}" />
            </classpath>
        </junit>
    </target>

    <target depends="check_for_optional_packages" name="compile">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <javac debug="true" deprecation="true" destdir="${build.dest}" srcdir="${src.dir}">
            <classpath refid="classpath" />
            <exclude unless="jdk1.4+" name="**/JDKRegexpAdapter.java"/>
            <exclude unless="bsf.present" name="org/jruby/javasupport/bsf/**/*.java"/>
            <exclude unless="junit.present" name="**/test/**"/>
            <exclude unless="db4o.present" name="org/jruby/javasupport/db4o/**"/>
            <exclude name="**/tars/**"/>
        </javac>
        <copy todir="${build.dest}">
			<fileset dir="${src.dir}">
				<include name="gnu/**/*.properties"/>
				<include name="org/**/*.properties"/>
            </fileset>
        </copy>
        <!-- Create jar in build dir -->
        <jar basedir="${build.dest}" compress="true" jarfile="${jar.file}" manifest="jruby.mf"/>
    </target>

    <target depends="compile" name="bin-gz">
        <mkdir dir="${build.tars.base}"/>
        <mkdir dir="${build.tars}"/>
        
        <copy todir="${build.tars}">
            <fileset dir="${base.dir}">
                <include name="COPYING"/>
                <include name="README"/>
                <include name="test.rb"/>
                <include name="jruby.bat"/>
                <include name="jruby.sh"/>
                <include name="samples/**/*"/>
            </fileset>
            <fileset dir="${build.dir}">
                <include name="jruby.jar"/>
            </fileset>
        </copy>
        
        <tar basedir="${build.tars.base}" tarfile="${build.dir}/jruby.tar">
            <exclude name="jruby_${version.file}/gnu/**/*"/>
            <exclude name="jruby_${version.file}/org/**/*"/>
        </tar>

        <gzip src="${build.dir}/jruby.tar" zipfile="${build.dir}/jruby-${version.file}.tar.gz"/>

        <!--<delete dir="${build.tars}"/> 
        <delete file="${build.dir}/jruby.tar"/>
        <delete file="${build.dir}/jruby.jar"/>-->
    </target>

    <target depends="bin-gz" description="Create source archive." name="src-gz">
        <mkdir dir="${build.tars}"/>

        <copy todir="${build.tars}">
            <fileset dir="${base.dir}">
            	<include name="build.xml"/>
            	<include name="COPYING"/>
            	<include name="jruby.mf"/>
            	<include name="README"/>
            	<include name="README.test"/>
                <include name="*.rb"/>
                <include name="samples/**/*"/>
                <include name="gnu/**/*.java"/>
                <include name="org/**/*.java"/>
                <include name="gnu/**/*.html"/>
                <include name="org/**/*.html"/>
            </fileset>
        </copy>
        
        <tar basedir="${build.tars.base}" tarfile="${build.dir}/jruby-src.tar">
            <exclude name="jruby-${version.file}/jruby.jar"/>
        </tar>

        <gzip src="${build.dir}/jruby-src.tar" zipfile="${build.dir}/jruby-src-${version.file}.tar.gz"/>

        <!-- <delete file="${build.dir}/jruby-src.tar"/> -->
    </target>

    <target description="Build Javadoc documentation" name="javadocs">
        <mkdir dir="${build.docs}"/>
        <mkdir dir="${build.docs}/support"/>
        <javadoc destdir="${build.docs}" doctitle="${javadoc.title}" packagenames="org.jruby.*" public="true" sourcepath="${src.dir}" use="true" version="true" windowtitle="${javadoc.title}"/>
        <javadoc destdir="${build.docs}/support" doctitle="${javadoc.title}" packagenames="gnu.*" public="true" sourcepath="${src.dir}" use="true" version="true" windowtitle="${javadoc.title}"/>
    </target>
	
    <target depends="bin-gz,src-gz" description="Build everything." name="all">
        <echo message="JRuby built."/>
    </target>

    <target description="Clean all build products." name="clean">
        <delete dir="${build.dir}"/>
    </target>
</project>

--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Match Reference---<tt>MatchData</tt> acts as an array, and may be accessed using the normal array indexing techniques. <em>mtch</em>[0] is equivalent to the special variable <tt>$&amp;</tt>, and returns the entire matched string. <em>mtch</em>[1], <em>mtch</em>[2], and so on return the values of the matched backreferences (portions of the pattern between parentheses).
- !ruby/struct:SM::Flow::VERB 
  body: "   m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\n   m[0]       #=&gt; &quot;HX1138&quot;\n   m[1, 2]    #=&gt; [&quot;H&quot;, &quot;X&quot;]\n   m[1..3]    #=&gt; [&quot;H&quot;, &quot;X&quot;, &quot;113&quot;]\n   m[-3, 2]   #=&gt; [&quot;X&quot;, &quot;113&quot;]\n"
full_name: MatchData#[]
is_singleton: false
name: "[]"
params: |
  mtch[i]               => obj
  mtch[start, length]   => array
  mtch[range]           => array

visibility: public

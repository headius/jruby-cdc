--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns an array containing the names of public instance methods in the receiver. For a module, these are the public methods; for a class, they are the instance (not singleton) methods. With no argument, or with an argument that is <tt>false</tt>, the instance methods in <em>mod</em> are returned, otherwise the methods in <em>mod</em> and <em>mod</em>'s superclasses are returned.
- !ruby/struct:SM::Flow::VERB 
  body: "   module A\n     def method1()  end\n   end\n   class B\n     def method2()  end\n   end\n   class C &lt; B\n     def method3()  end\n   end\n\n   A.instance_methods                #=&gt; [&quot;method1&quot;]\n   B.instance_methods(false)         #=&gt; [&quot;method2&quot;]\n   C.instance_methods(false)         #=&gt; [&quot;method3&quot;]\n   C.instance_methods(true).length   #=&gt; 43\n"
full_name: Module#instance_methods
is_singleton: false
name: instance_methods
params: |
  mod.instance_methods(include_super=true)   => array

visibility: public

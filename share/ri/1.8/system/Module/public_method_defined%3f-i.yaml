--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns <tt>true</tt> if the named public method is defined by <em>mod</em> (or its included modules and, if <em>mod</em> is a class, its ancestors).
- !ruby/struct:SM::Flow::VERB 
  body: "   module A\n     def method1()  end\n   end\n   class B\n     protected\n     def method2()  end\n   end\n   class C &lt; B\n     include A\n     def method3()  end\n   end\n\n   A.method_defined? :method1           #=&gt; true\n   C.public_method_defined? &quot;method1&quot;   #=&gt; true\n   C.public_method_defined? &quot;method2&quot;   #=&gt; false\n   C.method_defined? &quot;method2&quot;          #=&gt; true\n"
full_name: Module#public_method_defined?
is_singleton: false
name: public_method_defined?
params: |
  mod.public_method_defined?(symbol)   => true or false

visibility: public

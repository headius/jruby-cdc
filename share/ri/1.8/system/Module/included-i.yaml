--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Callback invoked whenever the receiver is included in another module or class. This should be used in preference to <tt>Module.append_features</tt> if your code wants to perform some action when a module is included in another.
- !ruby/struct:SM::Flow::VERB 
  body: "       module A\n         def A.included(mod)\n           puts &quot;#{self} included in #{mod}&quot;\n         end\n       end\n       module Enumerable\n         include A\n       end\n"
full_name: Module#included
is_singleton: false
name: included
params: |
  included( othermod )

visibility: public

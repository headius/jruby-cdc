--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Looks up the named method as a receiver in <em>obj</em>, returning a <tt>Method</tt> object (or raising <tt>NameError</tt>). The <tt>Method</tt> object acts as a closure in <em>obj</em>'s object instance, so instance variables and the value of <tt>self</tt> remain available.
- !ruby/struct:SM::Flow::VERB 
  body: "   class Demo\n     def initialize(n)\n       @iv = n\n     end\n     def hello()\n       &quot;Hello, @iv = #{@iv}&quot;\n     end\n   end\n\n   k = Demo.new(99)\n   m = k.method(:hello)\n   m.call   #=&gt; &quot;Hello, @iv = 99&quot;\n\n   l = Demo.new('Fred')\n   m = l.method(&quot;hello&quot;)\n   m.call   #=&gt; &quot;Hello, @iv = Fred&quot;\n"
full_name: Object#method
is_singleton: false
name: method
params: |
  obj.method(sym)    => method

visibility: public

--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns an array of the names of singleton methods for <em>obj</em>. If the optional <em>all</em> parameter is true, the list will include methods in modules included in <em>obj</em>.
- !ruby/struct:SM::Flow::VERB 
  body: "   module Other\n     def three() end\n   end\n\n   class Single\n     def Single.four() end\n   end\n\n   a = Single.new\n\n   def a.one()\n   end\n\n   class &lt;&lt; a\n     include Other\n     def two()\n     end\n   end\n\n   Single.singleton_methods    #=&gt; [&quot;four&quot;]\n   a.singleton_methods(false)  #=&gt; [&quot;two&quot;, &quot;one&quot;]\n   a.singleton_methods         #=&gt; [&quot;two&quot;, &quot;one&quot;, &quot;three&quot;]\n"
full_name: Object#singleton_methods
is_singleton: false
name: singleton_methods
params: |
  obj.singleton_methods(all=true)    => array

visibility: public

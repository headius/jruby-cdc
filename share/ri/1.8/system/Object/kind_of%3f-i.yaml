--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns <tt>true</tt> if <em>class</em> is the class of <em>obj</em>, or if <em>class</em> is one of the superclasses of <em>obj</em> or modules included in <em>obj</em>.
- !ruby/struct:SM::Flow::VERB 
  body: "   module M;    end\n   class A\n     include M\n   end\n   class B &lt; A; end\n   class C &lt; B; end\n   b = B.new\n   b.instance_of? A   #=&gt; false\n   b.instance_of? B   #=&gt; true\n   b.instance_of? C   #=&gt; false\n   b.instance_of? M   #=&gt; false\n   b.kind_of? A       #=&gt; true\n   b.kind_of? B       #=&gt; true\n   b.kind_of? C       #=&gt; false\n   b.kind_of? M       #=&gt; true\n"
full_name: Object#kind_of?
is_singleton: false
name: kind_of?
params: |
  obj.is_a?(class)       => true or false
  obj.kind_of?(class)    => true or false

visibility: public

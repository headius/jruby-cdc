--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: The first three forms set the selected elements of <em>self</em> (which may be the entire array) to <em>obj</em>. A <em>start</em> of <tt>nil</tt> is equivalent to zero. A <em>length</em> of <tt>nil</tt> is equivalent to <em>self.length</em>. The last three forms fill the array with the value of the block. The block is passed the absolute index of each element to be filled.
- !ruby/struct:SM::Flow::VERB 
  body: "   a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ]\n   a.fill(&quot;x&quot;)              #=&gt; [&quot;x&quot;, &quot;x&quot;, &quot;x&quot;, &quot;x&quot;]\n   a.fill(&quot;z&quot;, 2, 2)        #=&gt; [&quot;x&quot;, &quot;x&quot;, &quot;z&quot;, &quot;z&quot;]\n   a.fill(&quot;y&quot;, 0..1)        #=&gt; [&quot;y&quot;, &quot;y&quot;, &quot;z&quot;, &quot;z&quot;]\n   a.fill {|i| i*i}         #=&gt; [0, 1, 4, 9]\n   a.fill(-2) {|i| i*i*i}   #=&gt; [0, 1, 8, 27]\n"
full_name: Array#fill
is_singleton: false
name: fill
params: |
  array.fill(obj)                                -> array
  array.fill(obj, start [, length])              -> array
  array.fill(obj, range )                        -> array
  array.fill {|index| block }                    -> array
  array.fill(start [, length] ) {|index| block } -> array
  array.fill(range) {|index| block }             -> array

visibility: public

--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: "Encapsulate the production of rdoc documentation. Basically you can use this as you would invoke rdoc from the command line:"
- !ruby/struct:SM::Flow::VERB 
  body: "   rdoc = RDoc::RDoc.new\n   rdoc.document(args)\n"
- !ruby/struct:SM::Flow::P 
  body: where <em>args</em> is an array of strings, each corresponding to an argument you'd give rdoc on the command line. See rdoc/rdoc.rb for details.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the list of output generators that we support
  name: Generator
  value: Struct.new(:file_name, :class_name, :key)
- !ruby/object:RI::Constant 
  comment: 
  name: GENERATORS
  value: "{}"
full_name: RDoc::RDoc
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: document
- !ruby/object:RI::MethodSummary 
  name: error
- !ruby/object:RI::MethodSummary 
  name: list_files_in_directory
- !ruby/object:RI::MethodSummary 
  name: normalized_file_list
- !ruby/object:RI::MethodSummary 
  name: output_flag_file
- !ruby/object:RI::MethodSummary 
  name: parse_dot_doc_file
- !ruby/object:RI::MethodSummary 
  name: parse_files
- !ruby/object:RI::MethodSummary 
  name: setup_output_dir
- !ruby/object:RI::MethodSummary 
  name: update_output_dir
name: RDoc
superclass: Object

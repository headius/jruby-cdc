--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: Draw a set of diagrams representing the modules and classes in the system. We draw one diagram for each file, and one for each toplevel class or module. This means there will be overlap. However, it also means that you'll get better context for objects.
- !ruby/struct:SM::Flow::P 
  body: To use, simply
- !ruby/struct:SM::Flow::VERB 
  body: "  d = Diagram.new(info)   # pass in collection of top level infos\n  d.draw\n"
- !ruby/struct:SM::Flow::P 
  body: The results will be written to the <tt>dot</tt> subdirectory. The process also sets the <tt>diagram</tt> attribute in each object it graphs to the name of the file containing the image. This can be used by output generators to insert images.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: FONT
  value: "\"Arial\""
- !ruby/object:RI::Constant 
  comment: 
  name: DOT_PATH
  value: "\"dot\""
full_name: RDoc::Diagram
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: add_classes
- !ruby/object:RI::MethodSummary 
  name: convert_to_png
- !ruby/object:RI::MethodSummary 
  name: draw
- !ruby/object:RI::MethodSummary 
  name: draw_module
- !ruby/object:RI::MethodSummary 
  name: find_full_name
- !ruby/object:RI::MethodSummary 
  name: find_names
- !ruby/object:RI::MethodSummary 
  name: wrap_in_image_map
name: Diagram
superclass: Object

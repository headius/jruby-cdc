--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns an indication of the number of arguments accepted by a method. Returns a nonnegative integer for methods that take a fixed number of arguments. For Ruby methods that take a variable number of arguments, returns -n-1, where n is the number of required arguments. For methods written in C, returns -1 if the call takes a variable number of arguments.
- !ruby/struct:SM::Flow::VERB 
  body: "   class C\n     def one;    end\n     def two(a); end\n     def three(*a);  end\n     def four(a, b); end\n     def five(a, b, *c);    end\n     def six(a, b, *c, &amp;d); end\n   end\n   c = C.new\n   c.method(:one).arity     #=&gt; 0\n   c.method(:two).arity     #=&gt; 1\n   c.method(:three).arity   #=&gt; -1\n   c.method(:four).arity    #=&gt; 2\n   c.method(:five).arity    #=&gt; -3\n   c.method(:six).arity     #=&gt; -3\n\n   &quot;cat&quot;.method(:size).arity      #=&gt; 0\n   &quot;cat&quot;.method(:replace).arity   #=&gt; 1\n   &quot;cat&quot;.method(:squeeze).arity   #=&gt; -1\n   &quot;cat&quot;.method(:count).arity     #=&gt; -1\n"
full_name: Method#arity
is_singleton: false
name: arity
params: |
  meth.arity    => fixnum

visibility: public

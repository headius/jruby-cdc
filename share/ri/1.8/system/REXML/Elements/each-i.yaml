--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: e if e.kind_of? Element
comment: 
- !ruby/struct:SM::Flow::P 
  body: Iterates through all of the child Elements, optionally filtering them by a given XPath
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "xpath:"
    body: optional. If supplied, this is a String XPath, and is used to filter the children, so that only matching children are yielded. Note that XPaths are automatically filtered for Elements, so that non-Element children will not be yielded
  type: :NOTE
- !ruby/struct:SM::Flow::VERB 
  body: " doc = Document.new '&lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;d/&gt;sean&lt;b/&gt;&lt;c/&gt;&lt;d/&gt;&lt;/a&gt;'\n doc.root.each {|e|p e}       #-&gt; Yields b, c, d, b, c, d elements\n doc.root.each('b') {|e|p e}  #-&gt; Yields b, b elements\n doc.root.each('child::node()')  {|e|p e}\n #-&gt; Yields &lt;b/&gt;, &lt;c/&gt;, &lt;d/&gt;, &lt;b/&gt;, &lt;c/&gt;, &lt;d/&gt;\n XPath.each(doc.root, 'child::node()', &amp;block)\n #-&gt; Yields &lt;b/&gt;, &lt;c/&gt;, &lt;d/&gt;, sean, &lt;b/&gt;, &lt;c/&gt;, &lt;d/&gt;\n"
full_name: REXML::Elements#each
is_singleton: false
name: each
params: ( xpath=nil, &block) {|e if e.kind_of? Element| ...}
visibility: public

--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Receives up to <em>maxlen</em> bytes from <tt>socket</tt> using recvfrom(2) after O_NONBLOCK is set for the underlying file descriptor. <em>flags</em> is zero or more of the <tt>MSG_</tt> options. The result, <em>mesg</em>, is the data received.
- !ruby/struct:SM::Flow::P 
  body: "When recvfrom(2) returns 0, Socket#recv_nonblock returns an empty string as data. The meaning depends on the socket: EOF on TCP, empty packet on UDP, etc."
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>maxlen</tt> - the number of bytes to receive from the socket
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>flags</tt> - zero or more of the <tt>MSG_</tt> options
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Example
- !ruby/struct:SM::Flow::VERB 
  body: "     serv = TCPServer.new(&quot;127.0.0.1&quot;, 0)\n     af, port, host, addr = serv.addr\n     c = TCPSocket.new(addr, port)\n     s = serv.accept\n     c.send &quot;aaa&quot;, 0\n     IO.select([s])\n     p s.recv_nonblock(10) #=&gt; &quot;aaa&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: Refer to Socket#recvfrom for the exceptions that may be thrown if the call to <em>recv_nonblock</em> fails.
- !ruby/struct:SM::Flow::P 
  body: BasicSocket#recv_nonblock may raise any error corresponding to recvfrom(2) failure, including Errno::EAGAIN.
- !ruby/struct:SM::Flow::H 
  level: 3
  text: See
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: Socket#recvfrom
  type: :BULLET
full_name: BasicSocket#recv_nonblock
is_singleton: false
name: recv_nonblock
params: |
  basicsocket.recv_nonblock(maxlen) => mesg
  basicsocket.recv_nonblock(maxlen, flags) => mesg

visibility: public

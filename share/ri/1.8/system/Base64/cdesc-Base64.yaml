--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: The Base64 module provides for the encoding (#encode64) and decoding (#decode64) of binary data using a Base64 representation.
- !ruby/struct:SM::Flow::P 
  body: "The following particular features are also provided:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: encode into lines of a given length (#b64encode)
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: decode the special format specified in RFC2047 for the representation of email headers (decode_b)
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Example
- !ruby/struct:SM::Flow::P 
  body: A simple encoding and decoding.
- !ruby/struct:SM::Flow::VERB 
  body: "    require &quot;base64&quot;\n\n    enc   = Base64.encode64('Send reinforcements')\n                        # -&gt; &quot;U2VuZCByZWluZm9yY2VtZW50cw==\\n&quot;\n    plain = Base64.decode64(enc)\n                        # -&gt; &quot;Send reinforcements&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: The purpose of using base64 to encode data is that it translates any binary data into purely printable characters. It is specified in RFC 2045 (http://www.faqs.org/rfcs/rfc2045.html).
constants: []

full_name: Base64
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: b64encode
- !ruby/object:RI::MethodSummary 
  name: decode64
- !ruby/object:RI::MethodSummary 
  name: decode_b
- !ruby/object:RI::MethodSummary 
  name: encode64
name: Base64
superclass: 

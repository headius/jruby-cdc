--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: ""
comment: 
- !ruby/struct:SM::Flow::P 
  body: Generate a Form element as a string.
- !ruby/struct:SM::Flow::P 
  body: <tt>method</tt> should be either &quot;get&quot; or &quot;post&quot;, and defaults to the latter. <tt>action</tt> defaults to the current CGI script name. <tt>enctype</tt> defaults to &quot;application/x-www-form-urlencoded&quot;.
- !ruby/struct:SM::Flow::P 
  body: Alternatively, the attributes can be specified as a hash.
- !ruby/struct:SM::Flow::P 
  body: "See also #multipart_form() for forms that include file uploads."
- !ruby/struct:SM::Flow::VERB 
  body: "  form{ &quot;string&quot; }\n    # &lt;FORM METHOD=&quot;post&quot; ENCTYPE=&quot;application/x-www-form-urlencoded&quot;&gt;string&lt;/FORM&gt;\n\n  form(&quot;get&quot;) { &quot;string&quot; }\n    # &lt;FORM METHOD=&quot;get&quot; ENCTYPE=&quot;application/x-www-form-urlencoded&quot;&gt;string&lt;/FORM&gt;\n\n  form(&quot;get&quot;, &quot;url&quot;) { &quot;string&quot; }\n    # &lt;FORM METHOD=&quot;get&quot; ACTION=&quot;url&quot; ENCTYPE=&quot;application/x-www-form-urlencoded&quot;&gt;string&lt;/FORM&gt;\n\n  form(&quot;METHOD&quot; =&gt; &quot;post&quot;, &quot;ENCTYPE&quot; =&gt; &quot;enctype&quot;) { &quot;string&quot; }\n    # &lt;FORM METHOD=&quot;post&quot; ENCTYPE=&quot;enctype&quot;&gt;string&lt;/FORM&gt;\n"
full_name: CGI::HtmlExtension#form
is_singleton: false
name: form
params: (method = "post", action = script_name, enctype = "application/x-www-form-urlencoded") {|| ...}
visibility: public

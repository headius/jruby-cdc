--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Generate a sequence of radio button Input elements, as a String.
- !ruby/struct:SM::Flow::P 
  body: "This works the same as #checkbox_group(). However, it is not valid to have more than one radiobutton in a group checked."
- !ruby/struct:SM::Flow::VERB 
  body: "  radio_group(&quot;name&quot;, &quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;)\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;foo&quot;&gt;foo\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;bar&quot;&gt;bar\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;baz&quot;&gt;baz\n\n  radio_group(&quot;name&quot;, [&quot;foo&quot;], [&quot;bar&quot;, true], &quot;baz&quot;)\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;foo&quot;&gt;foo\n    # &lt;INPUT TYPE=&quot;radio&quot; CHECKED NAME=&quot;name&quot; VALUE=&quot;bar&quot;&gt;bar\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;baz&quot;&gt;baz\n\n  radio_group(&quot;name&quot;, [&quot;1&quot;, &quot;Foo&quot;], [&quot;2&quot;, &quot;Bar&quot;, true], &quot;Baz&quot;)\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;1&quot;&gt;Foo\n    # &lt;INPUT TYPE=&quot;radio&quot; CHECKED NAME=&quot;name&quot; VALUE=&quot;2&quot;&gt;Bar\n    # &lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;name&quot; VALUE=&quot;Baz&quot;&gt;Baz\n\n  radio_group(&quot;NAME&quot; =&gt; &quot;name&quot;,\n                &quot;VALUES&quot; =&gt; [&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;])\n\n  radio_group(&quot;NAME&quot; =&gt; &quot;name&quot;,\n                &quot;VALUES&quot; =&gt; [[&quot;foo&quot;], [&quot;bar&quot;, true], &quot;baz&quot;])\n\n  radio_group(&quot;NAME&quot; =&gt; &quot;name&quot;,\n                &quot;VALUES&quot; =&gt; [[&quot;1&quot;, &quot;Foo&quot;], [&quot;2&quot;, &quot;Bar&quot;, true], &quot;Baz&quot;])\n"
full_name: CGI::HtmlExtension#radio_group
is_singleton: false
name: radio_group
params: (name = "", *values)
visibility: public

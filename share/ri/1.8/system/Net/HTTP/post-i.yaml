--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: +body_segment+
comment: 
- !ruby/struct:SM::Flow::P 
  body: Posts <tt>data</tt> (must be a String) to <tt>path</tt>. <tt>header</tt> must be a Hash like { 'Accept' =&gt; '*/*', ... }.
- !ruby/struct:SM::Flow::P 
  body: In version 1.1 (ruby 1.6), this method returns a pair of objects, a Net::HTTPResponse object and an entity body string. In version 1.2 (ruby 1.8), this method returns a Net::HTTPResponse object.
- !ruby/struct:SM::Flow::P 
  body: If called with a block, yields each fragment of the entity body in turn as a string as it are read from the socket. Note that in this case, the returned response object will <b>not</b> contain a (meaningful) body.
- !ruby/struct:SM::Flow::P 
  body: <tt>dest</tt> argument is obsolete. It still works but you must not use it.
- !ruby/struct:SM::Flow::P 
  body: In version 1.1, this method might raise an exception for 3xx (redirect). In this case you can get an HTTPResponse object by &quot;anException.response&quot;. In version 1.2, this method never raises exception.
- !ruby/struct:SM::Flow::VERB 
  body: "    # version 1.1\n    response, body = http.post('/cgi-bin/search.rb', 'query=foo')\n\n    # version 1.2\n    response = http.post('/cgi-bin/search.rb', 'query=foo')\n\n    # using block\n    File.open('result.txt', 'w') {|f|\n      http.post('/cgi-bin/search.rb', 'query=foo') do |str|\n        f.write str\n      end\n    }\n"
- !ruby/struct:SM::Flow::P 
  body: "You should set Content-Type: header field for POST. If no Content-Type: field given, this method uses &quot;application/x-www-form-urlencoded&quot; by default."
full_name: Net::HTTP#post
is_singleton: false
name: post
params: (path, data, initheader = nil, dest = nil) {|+body_segment+| ...}
visibility: public

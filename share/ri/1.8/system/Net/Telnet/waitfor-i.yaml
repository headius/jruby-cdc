--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: recvdata
comment: 
- !ruby/struct:SM::Flow::P 
  body: Read data from the host until a certain sequence is matched.
- !ruby/struct:SM::Flow::P 
  body: If a block is given, the received data will be yielded as it is read in (not necessarily all in one go), or nil if EOF occurs before any data is received. Whether a block is given or not, all data read will be returned in a single string, or again nil if EOF occurs before any data is received. Note that received data includes the matched sequence we were looking for.
- !ruby/struct:SM::Flow::P 
  body: "<tt>options</tt> can be either a regular expression or a hash of options. If a regular expression, this specifies the data to wait for. If a hash, this can specify the following options:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "Match:"
    body: a regular expression, specifying the data to wait for.
  - !ruby/struct:SM::Flow::LI 
    label: "Prompt:"
    body: as for Match; used only if Match is not specified.
  - !ruby/struct:SM::Flow::LI 
    label: "String:"
    body: as for Match, except a string that will be converted into a regular expression. Used only if Match and Prompt are not specified.
  - !ruby/struct:SM::Flow::LI 
    label: "Timeout:"
    body: the number of seconds to wait for data from the host before raising a TimeoutError. If set to false, no timeout will occur. If not specified, the Timeout option value specified when this instance was created will be used, or, failing that, the default value of 10 seconds.
  - !ruby/struct:SM::Flow::LI 
    label: "Waittime:"
    body: the number of seconds to wait after matching against the input data to see if more data arrives. If more data arrives within this time, we will judge ourselves not to have matched successfully, and will continue trying to match. If not specified, the Waittime option value specified when this instance was created will be used, or, failing that, the default value of 0 seconds, which means not to wait for more input.
  type: :NOTE
full_name: Net::Telnet#waitfor
is_singleton: false
name: waitfor
params: (options) {|recvdata| ...}
visibility: public
